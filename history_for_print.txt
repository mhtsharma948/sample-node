    1  gst
    2  shell
    3  $SHELL
    4  quit
    5  apt -h
    6  echo $o
    7  echo $0
    8  vim
    9  sudo apt-get install nano
   10  nano a
   11  ll
   12  ls
   13  ls -la
   14  cd Desktop
   15  cat> mohit.html
   16  ll
   17  ls -la
   18  mo
   19  mohit.html
   20  sudo apt-get install nodejs
   21  curl
   22  sudo apt-get install curl
   23  curl -v
   24  sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
   25  git
   26  sudo apt-get install git
   27  git
   28  sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
   29  gst
   30  npm -v
   31  node -v
   32  apt
   33  sudo apt-get install nodejs
   34  node -v
   35  who
   36  whoami
   37  npm -v
   38  ls -la
   39  sudo apt-get vim
   40  sudo apt-get install vim
   41  vim
   42  vim .zshrc
   43  echo $PATH
   44  gedit
   45  gedit .zshrc
   46  ls
   47  ls -la
   48  node -v
   49  echo $PATH
   50  where
   51  ls
   52  ls -la
   53  cd ..
   54  ls
   55  sudo su
   56  node -v
   57  sudo apt-get purge nodejs
   58  bash
   59  sudo apt-get install nodejs
   60  sudo apt-get purge nodejs
   61  sudo apt-get install nodejs
   62  node -v
   63  /usr/bin/nodejs
   64  nodejs
   65  nodejs -v
   66  sudo apt-get purge nodejs
   67  apt-get install nodejs-legacy
   68  sudo apt-get install nodejs-legacy
   69  node -v
   70  npm -v
   71  sudo apt-get install npm
   72  node -v
   73  sudo apt-get update
   74  node -v
   75  npm -v
   76  sudo n latest
   77  curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nsudo apt-get install -y nodejs
   78  node -v
   79  npm
   80  npm -v
   81  sudo apt-get install code
   82  sudo apt-get install vscode
   83  python -m SimpleHTTPServer 8000
   84  ll
   85  cd Downloads
   86  python -m SimpleHTTPServer 8000
   87  cd ..
   88  sudo apt-get update
   89  ^[[200~sudo apt-get install \\n    apt-transport-https \\n    ca-certificates \\n    curl \\n    software-properties-common~
   90  sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ software-properties-common
   91  ^[[200~sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
   92  sudo apt-get install apt-transport-https 
   93  ^[[200~sudo apt-get install ca-certificates
   94  sudo apt-get install ca-certificates
   95  sudo apt-get install software-properties-common
   96  $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   97  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   98  sudo dpkg
   99  sudo docker run hello-world
  100  sudo service docker start
  101  sudo docker run hello-world
  102  sudo docker_images
  103  slack
  104  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  105  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/darwin/amd64/kubectl
  106  kubectl cluster-info
  107  code .zshrc
  108  sudo code .zshrc
  109  code .zshrc
  110  gedit .zshrc
  111  kubectl cluster-info
  112  chrome
  113  google-chrome
  114  kubectl cluster-info
  115  gedit .zshrc
  116  . ~/.zshrc
  117  kubectl cluster-info
  118  gedit .zshrc
  119  kubectl cluster-info
  120  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  121  kubectl cluster-info
  122  chmod +x ./kubectl
  123  sudo mv ./kubectl /usr/local/bin/kubectl
  124  kubectl cluster-info
  125  minikube start 
  126  minikube start --vm-driver=xxx
  127  minikube start --vm-driver=virtualbox
  128  virtualbox -version
  129  sudo apt-get install linux-headers-generic
  130  virtualbox -version
  131  sudo apt-get install virtualbox-dkms
  132  virtualbox -version
  133  modprobe vboxdrv
  134  sudo apt-get install virtualbox
  135  virtualbox
  136  sudo apt-get install virtualbox
  137  sudo apt-get purge virtualbox
  138  sudo apt-get install virtualbox
  139  virtualbox
  140  sudo apt-get install virtualbox-dkms
  141  sudo apt-get install linux-headers-generic
  142  exit
  143  virtualbox
  144  sudo apt-get install virtualbox
  145  sudo apt-get purge virtualbox
  146  sudo curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.10.0/docker-machine-driver-kvm-ubuntu16.04 > /usr/local/bin/docker-machine-driver-kvm \ 
  147  sudo chown -R $(whoami) /usr/local/bin
  148  sudo curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.10.0/docker-machine-driver-kvm-ubuntu16.04 > /usr/local/bin/docker-machine-driver-kvm \ 
  149  chmod +x /usr/local/bin/docker-machine-driver-kvm
  150  minikube start
  151  kubectl version
  152  minikube start --vm-driver=kvm
  153  $ curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine &&\nchmod +x /tmp/docker-machine &&\nsudo cp /tmp/docker-machine /usr/local/bin/docker-machine
  154  curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine &&\nchmod +x /tmp/docker-machine &&\nsudo cp /tmp/docker-machine /usr/local/bin/docker-machine
  155  sudo apt-get purge virtualbox
  156  minikube start --vm-driver=kvm
  157  minikube start
  158  minikube start --vm-driver=kvm
  159  sudo apt-get install libvirt-bin qemu-kvm
  160  minikube start --vm-driver=kvm
  161  y
  162  id
  163  sudo service libvirtd restart
  164  minikube start --vm-driver=kvm
  165  sudo apt-get install virt-manager
  166  virt-manager
  167  kubectl -help
  168  kubectl cluster-info
  169  minikube dashboard
  170  minikube start --vm-driver=kvm
  171  virt-manager
  172  minikube dashboard
  173  desktop
  174  Desktop
  175  hapiJs
  176  ls
  177  docker build/
  178  docker build -t hapiJs:v1
  179  docker build -t hapijs:v1
  180  docker build -t hapijs:v1 .
  181  touch Dockerfile
  182  code Dockerfile
  183  docker build -t hapijs:v1 .
  184  ll
  185  sudo usermod -aG docker $(whoami)
  186  docker build -t hapijs:v1 .
  187  sudo service docker start
  188  docker build -t hapijs:v1 .
  189  eval "$(docker-machine env default)"
  190  sudo usermod -aG docker $(whoami)
  191  docker build -t hapijs:v2 .
  192  sudo service docker start
  193  docker build -t hapijs:v2 .
  194  sudo service docker status
  195  sudo service docker restart
  196  docker build
  197  sudo docker build
  198  docker build -t hapijs:v2
  199  docker build .
  200  guake
  201  docker build .
  202  sudo docker build .
  203  Desktop
  204  hapiJs
  205  sudo docker build .
  206  docker login
  207  sudo docker login
  208  docker build -t hapijs:v2 .
  209  sudo docker build -t hapijs:v2 .
  210  sudo docker push hapijs:v2
  211  docker push hapijs:v2
  212  sudo docker push hapijs:v2
  213  sudo docker push mhtsharma9482/hapijs:v2
  214  sudo docker build -t mhtsharma9482/hapijs:v2 .
  215  sudo docker push mhtsharma9482/hapijs:v2
  216  kubectl clusture-info
  217  kubectl cluster-info
  218  kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
  219  kubectl expose deployment hello-minikube --type=NodePort
  220  kubectl get pod
  221  curl $(minikube service hello-minikube --url)
  222  virt-manager
  223  kubectl scale deployment hello-minikube --replicas 5
  224  kubectl get pod
  225  virt-manager
  226  kubectl run hapijs --image=mhtsharma9482/hapijs:v2
  227  kubectl run hapijs --image=mhtsharma9482/hapijs:v2 --port:80
  228  kubectl run hapijs --image=mhtsharma9482/hapijs:v2 --port=80
  229  kubectl run hapijs1 --image=mhtsharma9482/hapijs:v2 --port=80
  230  npm start
  231  npm i
  232  npm start
  233  ../sample-node
  234  sudo docker build -t mhtsharma9482/sample-node:v1 .
  235  kubectl run samplenode --image=mhtsharma9482/sample-node:v1 --port=80
  236  sudo docker push mhtsharma9482/sample-node:v1
  237  kubectl run sample-node --image=mhtsharma9482/sample-node:v1 --port=80
  238  minikube service sample-node
  239  minikube service sample-node:v1
  240  kubectl get service
  241  kubectl expose deployement sample-node --type=NodePort
  242  kubectl expose deployment sample-node --type=NodePort
  243  kubectl get service
  244  minikube service sample-node
  245  ^[[200~<body class="logged-out env-production">
  246  </a>              </li>
  247  </form></div>
  248  </header>
  249  </div>
  250  <style type="text/css" media="screen" id="issue-labels-style">
  251  span.labelstyle-1d76db, .linked-labelstyle-1d76db {  background-color: #1d76db !important;  color: #fff !important;}.labelstyle-1d76db.selected {  background-color: #1d76db !important;  color: #fff !important;}.label-select-menu .labelstyle-1d76db.selected {  background:rgba(29, 118, 219, 0.12) !important;  color: #145299 !important;}
  252  span.labelstyle-bfdadc, .linked-labelstyle-bfdadc {  background-color: #bfdadc !important;  color: #2c3233 !important;}.labelstyle-bfdadc.selected {  background-color: #bfdadc !important;  color: #2c3233 !important;}.label-select-menu .labelstyle-bfdadc.selected {  background:rgba(191, 218, 220, 0.12) !important;  color: #849799 !important;}
  253  span.labelstyle-84e251, .linked-labelstyle-84e251 {  background-color: #84e251 !important;  color: #1d3212 !important;}.labelstyle-84e251.selected {  background-color: #84e251 !important;  color: #1d3212 !important;}.label-select-menu .labelstyle-84e251.selected {  background:rgba(132, 226, 81, 0.12) !important;  color: #599936 !important;}
  254  span.labelstyle-b60205, .linked-labelstyle-b60205 {  background-color: #b60205 !important;  color: #fff !important;}.labelstyle-b60205.selected {  background-color: #b60205 !important;  color: #fff !important;}.label-select-menu .labelstyle-b60205.selected {  background:rgba(182, 2, 5, 0.12) !important;  color: #990104 !important;}
  255  span.labelstyle-d93f0b, .linked-labelstyle-d93f0b {  background-color: #d93f0b !important;  color: #fff !important;}.labelstyle-d93f0b.selected {  background-color: #d93f0b !important;  color: #fff !important;}.label-select-menu .labelstyle-d93f0b.selected {  background:rgba(217, 63, 11, 0.12) !important;  color: #982c07 !important;}
  256  span.labelstyle-c2e0c6, .linked-labelstyle-c2e0c6 {  background-color: #c2e0c6 !important;  color: #2c332d !important;}.labelstyle-c2e0c6.selected {  background-color: #c2e0c6 !important;  color: #2c332d !important;}.label-select-menu .labelstyle-c2e0c6.selected {  background:rgba(194, 224, 198, 0.12) !important;  color: #849987 !important;}
  257  span.labelstyle-0e8a16, .linked-labelstyle-0e8a16 {  background-color: #0e8a16 !important;  color: #fff !important;}.labelstyle-0e8a16.selected {  background-color: #0e8a16 !important;  color: #fff !important;}.label-select-menu .labelstyle-0e8a16.selected {  background:rgba(14, 138, 22, 0.12) !important;  color: #0f9918 !important;}
  258  span.labelstyle-ededed, .linked-labelstyle-ededed {  background-color: #ededed !important;  color: #333333 !important;}.labelstyle-ededed.selected {  background-color: #ededed !important;  color: #333333 !important;}.label-select-menu .labelstyle-ededed.selected {  background:rgba(237, 237, 237, 0.12) !important;  color: #999999 !important;}
  259  span.labelstyle-fbca04, .linked-labelstyle-fbca04 {  background-color: #fbca04 !important;  color: #332900 !important;}.labelstyle-fbca04.selected {  background-color: #fbca04 !important;  color: #332900 !important;}.label-select-menu .labelstyle-fbca04.selected {  background:rgba(251, 202, 4, 0.12) !important;  color: #997b02 !important;}
  260  </style>
  261  </ul>
  262  --><span class="path-divider">/</span><!--
  263  --><strong itemprop="name"><a href="/jupyter/notebook" data-pjax="#js-repo-pjax-container">notebook</a></strong>
  264  </h1>
  265  <nav class="reponav js-repo-nav js-sidenav-container-pjax container" itemscope="" itemtype="http://schema.org/BreadcrumbList" role="navigation" data-pjax="#js-repo-pjax-container">
  266  </a>  </span>
  267  </a>
  268  </nav>
  269  <div class="container new-discussion-timeline experiment-repo-nav">
  270  <span class="css-truncate">
  271  </span>
  272  </form></div>
  273  </div>
  274  <div class="footer container-lg px-3" role="contentinfo">
  275  export BROWSER=google-chrome
  276  minikube service sample-node
  277  minikube service hello-minikube
  278  kubectl delete deployment hello-minikube
  279  curl $(minikube service sample-node --url)
  280  kubectl get pod
  281  kubectl get nodes
  282  kubectl get services
  283  kubectl delete deployment hapijs
  284  kubectl delete deployment hapijs1
  285  minikube service sample-node
  286  kubectl get services
  287  kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
  288  kubectl expose deployment hello-minikube --type=NodePort
  289  kubectl expose deployment hello-minikube1 --type=NodePort
  290  kubectl run hello-minikube1 --image=gcr.io/google_containers/echoserver:1.4 --port=8080
  291  kubectl expose deployment hello-minikube1 --type=NodePort
  292  minikube service hello-minikube
  293  kubectl run sample-node2 --image=mhtsharma9482/sample-node:v1 --port=3000
  294  kubectl expose deployment sample-node2 --type=NodePort
  295  curl $(minikube service sample-node2 --url)
  296  minikube service sample-node2
  297  minikube get services
  298  minikube get service
  299  kubectl get services
  300  kubectl get pod
  301  kubectl get node
  302  kubectl get cluster
  303  minikube service hello-minikubell
  304  ll
  305  history
  306  kubectl scale deployment sample-node2 --replicas 5
  307  minikube service hello-minikubell
  308  minikube service hello-minikube2
  309  minikube service sample-node2
  310  curl http://mhtsharma.info
  311  history
  312  history
  313  curl $(http://mhtsharma.info)
  314  curl $(http://mhtsharma.info --url)
  315  curl $(http://mhtsharma.info --manual)
  316  curl $(http://mhtsharma.info ) --manual
  317  minikube ssh
  318  kubectl get cs
  319  kubectl config use-context"vagrant-multi"
  320  kubectl config use-context "vagrant-multi"
  321  kubelet --address ip   
  322  kubelet --address ip
  323  kublet --address ip
  324  npm install mongodb
  325  npm install -g mongodb
  326  sudo npm install mongodb --save
  327  ll
  328  sudo npm install mongodb -g
  329  mongod
  330  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
  331  echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
  332  sudo apt-get update
  333  sudo apt-get install -y mongodb-org
  334  sudo service mongod start
  335  mongo
  336  npm install -g @angular/cli
  337  sudo npm install -g @angular/cli
  338  ../../
  339  ll
  340  doc
  341  Documents
  342  ng new parentChild
  343  parentChild
  344  ll
  345  cat package.json
  346  npm start
  347  code *
  348  kubectl get cs
  349  history
  350  minikube start
  351  kubectl get cs
  352  kubectl get nodes
  353  kubectl get services
  354  minikube service sample-node2
  355  sudo docker images
  356  docker ps
  357  sudo docker os
  358  sudo docker ps
  359  sudo dockerrun -d mhtsharma948/sample-node
  360  sudo docker run -d mhtsharma948/sample-node
  361  sudo docker run -d mhtsharma948/sample-node:v1
  362  sudo docker run -d mhtsharma9482/sample-node
  363  sudo docker run -d mhtsharma9482/sample-node:v1
  364  sudo ps aux | grep mhtsharma9482/sample-node:v1
  365  sudo docker ps
  366  sudo docker inspect 923ea014cde8
  367  curl http://172.17.0.2
  368  curl http://172.17.0.2:3000
  369  sudo docker stop 172.17.0.2
  370  sudo docker stop 923ea014cde8
  371  sudo docker ps
  372  sudo docker images
  373  sudo kubectl get images
  374  sudo kubectl get pods
  375  cat poss/healthy-sample-node2-58577bf997-ljrjd.yaml
  376  cat pods/healthy-sample-node2-58577bf997-ljrjd.yaml
  377  kubectl get demonset
  378  kubectl get daemonset
  379  curl http://172.17.0.2
  380  sudo docker run -d mhtsharma9482/sample-node:v1
  381  sudo docker ps
  382  sudo docker inspect a956d75fa016
  383  curl http://172.17.0.2:3000
  384  kubectl get services
  385  curl http://10.0.0.159:3000
  386  kubectl get nodes
  387  kubectl expose deployment sample-node2 --type=NodePort
  388  kubectl get pods
  389  echo $MY_POD_IP
  390  kubectl describe pods
  391  kubectl get poda
  392  kubectl get pods
  393  kubectl describe pods
  394  curl http://172.17.0.13:3000
  395  kubectl get services
  396  curl http://172.17.0.13:30160
  397  kubectl get nodes
  398  kubectl get pods -l "app=sample-node"
  399  kubectl run service sample-node
  400  kubectl service sample-node
  401  minikube service sample-node2
  402  kubectl describe pods | grep Labels
  403  kubectl get pods -l "pod-template-hash=540570542"
  404  kubectl describe services | grep Endpoints
  405  curl http://172.17.0.10:3000
  406  curl http://172.17.0.2:8080
  407  kubectl get replicas
  408  kubectl get replicasets
  409  kubectl get deployments
  410  kubectl describe deployments sample-node2
  411  sudo curl -s https://raw.githubusercontent.com/Azure/service-fabric-scripts-and-templates/master/scripts/SetupServiceFabric/SetupServiceFabric.sh | sudo bash
  412  sudo apt-get install servicefabricsdkcommon
  413  ps aux | grep apt
  414  sudo curl -s https://raw.githubusercontent.com/Azure/service-fabric-scripts-and-templates/master/scripts/SetupServiceFabric/SetupServiceFabric.sh | sudo bash
  415  ps aux | grep apt
  416  sudo curl -s https://raw.githubusercontent.com/Azure/service-fabric-scripts-and-templates/master/scripts/SetupServiceFabric/SetupServiceFabric.sh | sudo bash
  417  ps aux | grep apt
  418  sudo apt-get install servicefabricsdkcommon
  419  sudo dpkg --configure -a
  420  sudo apt-get install servicefabricsdkcommon
  421  sudo curl -s https://raw.githubusercontent.com/Azure/service-fabric-scripts-and-templates/master/scripts/SetupServiceFabric/SetupServiceFabric.sh | sudo bash
  422  sudo /opt/microsoft/sdk/servicefabric/common/clustersetup/devclustersetup.sh
  423  sudo npm install -g yo
  424  sudo npm install -g generator-azuresfcontainer
  425  minikube start
  426  kubectl get nodes
  427  kubectl describe nodes
  428  curl http://192.168.42.246:30000
  429  ll
  430  desktop
  431  Desktop
  432  ../../
  433  ll
  434  mohit-sharma
  435  Desktop
  436  cat> azure.txt
  437  cat azure.txt
  438  docker images
  439  sudo docker images
  440  docker ps
  441  history
  442  sudo docker run -d mhtsharma9482/sample-node:v1
  443  docker ps
  444  sudo docker images
  445  docker ps
  446  curl http://localhost:3000
  447  sudo curl http://localhost:3000
  448  sudo docker run -d mhtsharma9482/hapijs:v2
  449  sudo docker run -d mhtsharma9482/sample-node:v1
  450  docker ps
  451  sudo docker inspect 13dd31491c4d
  452  ../
  453  echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy main" | \\n     sudo tee /etc/apt/sources.list.d/azure-cli.list
  454  sudo apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893
  455  sudo apt-get install apt-transport-https
  456  sudo apt-get update && sudo apt-get install azure-cli
  457  azz
  458  az
  459  az --version
  460  az group create --name raykorResourceGroup --location eastus
  461  az login abhishek
  462  az acr login --name abhishek
  463  az login --name abhishek
  464  azure login
  465  sudo npm install -g azure-cli
  466  azure login
  467  az group create --name myResourceGroup --location eastus
  468  az group create --name raykorResourceGroup --location eastus
  469  az login -u abhishek.priyadarshi@raykor.com
  470  az group create --name raykorResourceGroup --location eastus
  471  az acr create --resource-group raykorResourceGroup --name raykorTest --sku Basic
  472  az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  473  az acr login --name raykorTest
  474  sudo az acr login --name raykorTest
  475  docker images
  476  Desktop
  477  ll
  478  sample-node
  479  ll
  480  az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  481  az acr list --resource-group raykorResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  482  ../../Documents
  483  git clone https://github.com/Azure-Samples/azure-voting-app-redis.git
  484  azure-voting-app-redis
  485  ll
  486  cat docker-compose.yml
  487  docker-compose up -d
  488  sudo curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
  489  sudo chmod +x /usr/local/bin/docker-compose
  490  $ mkdir -p ~/.zsh/completion
  491  mkdir -p ~/.zsh/completion
  492  curl -L https://raw.githubusercontent.com/docker/compose/1.17.0/contrib/completion/zsh/_docker-compose > ~/.zsh/completion/_docker-compose
  493  ../../
  494  code .zshrc
  495  echo $fpath
  496  exec $SHELL -l
  497  docker-compose --version
  498  docker-compose up -d
  499  Documents
  500  ll
  501  azure-voting-app-redis
  502  docker-compose up -d
  503  docker images
  504  docker-compose stop
  505  docker-compose down
  506  docker images
  507  az acr list --resource-group raykorResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  508  ^[[200~docker tag azure-vote-front <acrLoginServer>/azure-vote-front:redis-v1
  509  ~docker tag azure-vote-front raykortest.azurecr.io/azure-vote-front:redis-v1
  510  docker images
  511  docker tag azure-vote-front raykortest.azurecr.io/azure-vote-front:redis-v1
  512  sudo docker tag azure-vote-front raykortest.azurecr.io/azure-vote-front:redis-v1
  513  docker images
  514  docker push raykortest.azurecr.io/azure-vote-front:redis-v1
  515  sudo docker push raykortest.azurecr.io/azure-vote-front:redis-v1
  516  ifconfig
  517  sudo docker push raykortest.azurecr.io/azure-vote-front:redis-v1
  518  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  519  az aks get-credentials --resource-group=raykorResourceGroup --name=myK8sCluster
  520  ll
  521  ls -la
  522  .ssh
  523  ll
  524  cat id_rsa
  525  cat id_rsa.pub
  526  ../../
  527  mohit-sharma
  528  ll
  529  kubectl get nodes
  530  az provider register -n Microsoft.ContainerService
  531  az provider show -n Microsoft.ContainerService
  532  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 1 --generate-ssh-keys
  533  az provider list
  534  az provider register --namespace Microsoft.Cdn
  535  az provider show
  536  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  537  az provider register --namespace Microsoft.Compute
  538  az provider register --namespace Microsoft.Network
  539  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  540  az provider show -n Microsoft.Compute
  541  az provider show -n Microsoft.ContainerService
  542  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  543  az provider show -n Microsoft.Network
  544  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  545  az provider show -n Microsoft.Network
  546  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  547  az provider register --namespace Microsoft.Network
  548  az provider show -n Microsoft.Network
  549  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 3 --generate-ssh-keys
  550  az aks create --resource-group raykorResourceGroup --name myK8sCluster --agent-count 1 --generate-ssh-keys
  551  az aks get-credentials --resource-group=myResourceGroup --name=myK8sCluster
  552  az aks get-credentials --resource-group=raykorResourceGroup --name=myK8sCluster
  553  kubectl get nodes
  554  az acr list --resource-group raykorResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  555  sudo code azure-vote-all-in-one-redis.yml 
  556  code azure-vote-all-in-one-redis.yml 
  557  az aks install-cli
  558  Documents
  559  ll
  560  azure-voting-app-redis
  561  ll
  562  code azure-vote-all-in-one-redis.yml 
  563  kubectl get nodes
  564  kubectl get node
  565  az aks install-cli
  566  kubectl get node
  567  minikube start
  568  ll
  569  kubectl create -f azure-vote-all-in-one-redis.yml
  570  kubectl get service azure-vote-front --watch
  571  kubectl get node
  572  kubectl get nodes
  573  kubectl get services
  574  Documents
  575  azure-voting-app-redis
  576  ll
  577  kubectl get service
  578  kubectl get service azure-vote-front --watch
  579  desktop
  580  Desktop
  581  code blah
  582  kubectl get service azure-vote-front --watch
  583  kubectl get service azure-vote-front
  584  kubectl get service azure-vote-front --watch
  585  kubectl create -f azure-vote-all-in-one-redis.yml
  586  history
  587  kubectl create -f azure-vote-all-in-one-redis.yml
  588  kubectl delete deployment azure-vote-back
  589  kubectl get services
  590  kubectl delete service azure-vote-front
  591  kubectl delete service azure-vote-back
  592  kubectl get services
  593  kubectl get deployments
  594  kubectl delete deployment azure-vote-front
  595  kubectl create -f azure-vote-all-in-one-redis.yml
  596  kubectl get service azure-vote-front --watch
  597  kubectl get service azure-vote-back --watch
  598  kubectl get service azure-vote-front --watch
  599  show nodes
  600  kubectl get  nodes
  601  az aks get-credentials --resource-group=raykorResourceGroup --name=myK8sCluster
  602  kubectl get  nodes
  603  kubectl get service azure-vote-front --watch
  604  kubectl get deployments
  605  kubectl create -f azure-vote-all-in-one-redis.yml
  606  kubectl get deployments
  607  kubectl get service azure-vote-front --watch
  608  kubectl get pods
  609  kubectl autoscale deployment azure-vote-front --cpu-percent=50 --min=3 --max=10
  610  kubectl get pods
  611  kubectl get hpa
  612  kubectl get pods
  613  kubectl scale --replicas=5 deployment/azure-vote-front
  614  kubectl get pods
  615  kubectl autoscale deployment azure-vote-front --cpu-percent=50 --min=3 --max=10
  616  kubectl delete autoscale deployment azure-vote-front 
  617  kubectl delete autoscale azure-vote-front 
  618  kubectl autoscale deployment azure-vote-front1 --cpu-percent=50 --min=3 --max=10
  619  kubectl delete service azure-vote-front
  620  kubectl delete service azure-vote-back
  621  kubectl delete deployment azure-vote-back
  622  kubectl delete deployment azure-vote-front
  623  kubectl create -f azure-vote-all-in-one-redis.yml
  624  kubectl get pods
  625  kubectl scale --replicas=5 deployment/azure-vote-front
  626  kubectl get services
  627  kubectl get services --watch
  628  kubectl get services azure-vote-front--watch
  629  kubectl get services azure-vote-front --watch
  630  kubectl get pods
  631  kubectl scale --replicas=5 deployment/azure-vote-front
  632  kubectl get pods
  633  kubectl scale --replicas=5 deployment/azure-vote-front
  634  kubectl get pods
  635  kubectl autoscale deployment azure-vote-front --cpu-percent=50 --min=3 --max=10
  636  kubectl get pods
  637  kubectl get pod memory-demo --output=yaml
  638  kubectl create -f https://k8s.io/docs/tasks/configure-pod-container/qos-pod.yaml
  639  kubectl get pods qou-demo
  640  kubectl get pods
  641  kubectl get secret
  642  kubectl describe secret
  643  cat> volume.yaml
  644  kubectl get nodes
  645  sudo snap install conjure-up --classic
  646  juju controller
  647  cat> azure-secret.yaml
  648  code azure-secret.yaml
  649  kubectl create -f azure-secret.yaml
  650  code azure-volume.yaml
  651  kubectl describe secret
  652  kubectl create -f azure-volume.yaml
  653  kubectl get pods
  654  kubectl get pods --watch
  655  kubectl delete pod azure
  656  kubectl get pods --watch
  657  kubectl create -f azure-volume.yaml
  658  kubectl get pods azure
  659  kubectl delete pod azure
  660  kubectl delete service azure-vote-front
  661  kubectl delete service azure-vote-back
  662  kubectl delete deployment azure-vote-back
  663  kubectl delete deployment azure-vote-front
  664  kubectl get services
  665  kubectl get pods
  666  kubectl delete pod qos-demo
  667  kubectl get pods
  668  kubectl get nodes
  669  kubectl get ah
  670  kubectl get health
  671  kubectl get secret
  672  kubectl create -f azure-vote-all-in-one-redis.yml
  673  kubectl get pods
  674  kubectl get services
  675  ip addr show
  676  sudo add-apt-repository ppa:ubuntu-toolchain-r/test
  677  sudo apt-get update
  678  sudo apt-get upgrade
  679  node -v
  680  npm -v
  681  sxs
  682  clear
  683  sudo add-apt-repository ppa:webupd8team/java
  684  sudo apt-get install oracle-java8-set-default
  685  sudo apt-get update
  686  sudo apt-get install oracle-java8-set-default
  687  work
  688  java -version
  689  wget https://orientdb.com/download.php?file=orientdb-community-2.1.3.tar.gz
  690  sudo wget https://orientdb.com/download.php?file=orientdb-community-2.1.3.tar.gz
  691  /bin/bash
  692  azure-vote
  693  ll
  694  ls
  695  ls-la
  696  ls -la
  697  azure-vote
  698  ll
  699  python main.py
  700  Desktop
  701  sample-node
  702  git init
  703  gaa
  704  gst
  705  gcm "initial commit"
  706  gco -m "initial commit"
  707  gcam "initial commit"
  708  git config --global user.name "mhtsharma948"
  709  gcam "initial commit"
  710  git config --global user.email "mhtsharma948@gmail.com"
  711  gcam "initial commit"
  712  gp
  713  gp sample-node
  714  sudo \git push --set-upstream sample-node master
  715  sudo git push --set-upstream sample-node master
  716  git config --global push.default simple
  717  gp simple-node
  718  git login
  719  git config credential.helper store
  720  gp simple-node
  721  git push --set-upstream simple-node master
  722  Desktop/
  723  ll
  724  Desktop/sample-node
  725  gst
  726  gp
  727  gp sample-node
  728  git push --set-upstream sample-node master
  729  ls -git
  730  ls .git
  731  git push --set-upstream https://github.com/mhtsharma948/sample-node.git master
  732  gst
  733  kubectl get pods
  734  history
  735  docker -help
  736  sudo docker run -d mhtsharma9482/sample-node:v1
  737  docker ps
  738  sudo docker images
  739  sudo docker run -d azure-vote-front
  740  sudo docker ps
  741  kubectl proxy
  742  kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
  743  kubectl get deployments
  744  kubectl get pods --all-namespaces
  745  kubectl proxy
  746  ll
  747  ../
  748  ../../
  749  opt
  750  ll
  751  sudo tar -xf download.php?file=orientdb-community-2.1.3.tar.gz -C /opt
  752  ~
  753  ll
  754  Downloads
  755  ll
  756  sudo tar -xf download.php?file=orientdb-community-2.1.3.tar.gz -C /opt
  757  ../
  758  ll
  759  ../
  760  ''
  761  ll
  762  mo
  763  mohit-sharma
  764  ll
  765  ls -la
  766  ll
  767  sudo mv /opt/orientdb-community-2.1.3 /opt/orientdb
  768  sudo mv orientdb-community-2.1.3 /opt/orientdb
  769  ll
  770  sudo cd /opt/orientdb
  771  sudo /opt/orientdb
  772  sudo bin/server.sh
  773  sudo netstat -plunt | grep 2424
  774  sudo /opt/orientdb/bin/console.sh
  775  sudo service orientdb start
  776  kubectl proxy
  777  curl http://localhost:8001/ui
  778  curl http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy
  779  kubectl get services
  780  kubectl get pods
  781  docker ps
  782  sudo docker ps
  783  sudo docker stop f0f4ea13fe6e
  784  sudo docker ps
  785  sudo docker stop 13dd31491c4d
  786  sudo docker stop f52ed225ed7e
  787  sudo docker ps
  788  sudo docker stop 49baa6428a2d
  789  sudo docker ps
  790  docker image
  791  docker images
  792  ps aux | grep sh
  793  npm run start
  794  curl http://localhost:3000
  795  mpn install --save nodemon
  796  npn install --save nodemon
  797  npm install --save nodemon
  798  nodemon
  799  npm install -g nodemon
  800  sudo npm install -g nodemon
  801  npdemon
  802  nodemon
  803  curl http://localhost:3000
  804  curl http://localhost:3000/user
  805  node -v
  806  gst
  807  gaa
  808  git commit -m "Added Travis"
  809  git push
  810  gss
  811  gaa
  812  git commit -m "Added user age"
  813  git push
  814  gst
  815  gaa
  816  git commit -m "Added yml"
  817  gp
  818  sudo apt-get install python-software-properties
  819  sudo apt-add-repository ppa:brightbox/ruby-ng
  820  sudo apt-get update
  821  sudo apt-get install ruby2.1 ruby-switch
  822  sudo ruby-switch --set ruby2.1
  823  ruby -v
  824  gem install travis -v 1.8.8 --no-rdoc --no-ri
  825  travis version
  826  sudo apt-get install ruby2.1-dev
  827  gem install travis -v 1.8.8 --no-rdoc --no-ri
  828  sudo gem install travis -v 1.8.8 --no-rdoc --no-ri
  829  travis version
  830  travis whatsup
  831  travis login
  832  travis whatsup
  833  az acr list --resource-group raykorResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
  834  docker username
  835  travis env set DOCKER_USERNAME mhtsharma9482
  836  Desktop/sample-node
  837  travis env set DOCKER_USERNAME mhtsharma9482
  838  travis env set DOCKER_PASSWORD P@$$w0rd
  839  history
  840  docker build -t mhtsharma9482/sample-node:2.0.0
  841  docker build -t mhtsharma9482/sample-node:2.0.0 .
  842  docker push mhtsharma9482/sample-node:2.0.0
  843  sudo docker push mhtsharma9482/sample-node:2.0.0
  844  gst
  845  gaa
  846  gcam "minor changes"
  847  gsta
  848  gat
  849  gst
  850  gp
  851  travis whatsup
  852  travis env travis whatsup
  853  travis whatsup
  854  travis console
  855  travis moniter
  856  travis monitor
  857  travis lint
  858  travis history
  859  gaa
  860  gcam "travis"
  861  gp
  862  travis echo $
  863  travis $DOCKER_USERNAME
  864  travis env
  865  travis env list
  866  travis docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
  867  docker login -u "mhtsharma9482" -p "P@$$w0rd";
  868  sudo docker login -u "mhtsharma9482" -p "P@$$w0rd";
  869  sudo docker login -u mhtsharma9482 -p anshu.1234;
  870  travis env clear
  871  travis env set DOCKER_USERNAME mhtsharma9482
  872  travis env set DOCKER_USERNAME anshu.1234
  873  travis env set DOCKER_USERNAME mhtsharma9482
  874  travis env set DOCKER_PASSWORD anshu.1234
  875  travis env list
  876  gst
  877  gaa
  878  gcam "travis1"
  879  gp
  880  gst
  881  gaa
  882  gcam "travis2"
  883  gp
  884  history
  885  cd Desktop
  886  cat mo.txt > $history
  887  cat mo.txt > history
  888  ll
  889  history
  890  history > history_for_print.txt
  891  ll
  892  cat history_for_print.txt
  893  code history_for_print.txt
  894  kubectl clusture-info
  895  kubectl cluster-info
  896  azure -version
  897  az -version
  898  az version
  899  az -v
  900  echo $PATH
  901  travis env
  902  travis env list
  903  gst
  904  gaa
  905  gcam "travis3"
  906  gp
  907  gst
  908  kubectl -v
  909  kubectl version
  910  gaa
  911  gcam "travis4"
  912  gp
  913  travis whatsup
  914  travis
  915  env
  916  travis help
  917  travis history
  918  history
  919  travis echo $
  920  travis moniter
  921  travis monitor
  922  travis help
  923  travis lint
  924  sudo dmidecode -t 2
  925  Asudo lshw -class memory
  926  sudo lshw -class memory
  927  sample-node
  928  travis lint
  929  gaa
  930  gcam "travis5"
  931  gp
  932  gaa
  933  gcam "travis6"
  934  gp
  935  gaa
  936  gcam "travis7"
  937  gp
  938  travis env set AZURE_USERNAME abhishek.priyadarshi@raykor.com
  939  travis env set AZURE_PASSWORD Aug@2017
  940  gaa
  941  gcam "travis8"
  942  gp
  943  gaa
  944  gcam "travis9"
  945  gp
  946  gaa
  947  gcam "travis10"
  948  gp
  949  gaa
  950  gcam "travis11"
  951  gp
  952  gaa
  953  gcam "travis11"
  954  gp
  955  gaa
  956  gcam "travis12"
  957  gp
  958  gaa
  959  gcam "travis13"
  960  gp
  961  echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy main" | \\n     sudo tee /etc/apt/sources.list.d/azure-cli.list
  962  yum
  963  sudo apt-get install yum
  964  gaa
  965  gcam "travis14"
  966  gp
  967  gaa
  968  gcam "travis15"
  969  gp
  970  python -v
  971  python -version
  972  python version
  973  python --version
  974  gaa
  975  gcam "travis16"
  976  gp
  977  gst
  978  saa
  979  gaa
  980  gcam "travis17"
  981  gp
  982  gaa
  983  gcam "travis18"
  984  gp
  985  gaa
  986  gcam "travis19"
  987  gp
  988  travis whatsup
  989  travis help
  990  travis whoami
  991  travis token
  992  travis show
  993  gaa
  994  gcam "travis20"
  995  gp
  996  travis show --watch
  997  travis show --w
  998  travis show
  999  gaa
 1000  gcam "travis21"
 1001  gp
 1002  gaa
 1003  gcam "travis22"
 1004  gp
 1005  kubectl -v
 1006  kubectl version
 1007  az login -u $AZURE_USERNAME -P AZURE_PASSWORD
 1008  az login -u AZURE_USERNAME -P AZURE_PASSWORD
 1009  gaa
 1010  gcam "travis23"
 1011  gp
 1012  travis env list
 1013  gaa
 1014  gcam "travis24"
 1015  gp
 1016  gaa
 1017  gcam "travis25"
 1018  gp
 1019  travis env set AZURE_ Aug@2017
 1020  travis env list
 1021  travis env set AZURE_DOCKER raykorAzureTest
 1022  gaa
 1023  gcam "travis26"
 1024  gp
 1025  gaa
 1026  gcam "travis27"
 1027  gp
 1028  gaa
 1029  gcam "travis28"
 1030  gp
 1031  travis env set AZURE_DOCKER raykorazuretest.azurecr.io
 1032  Desktop/sample-node
 1033  travis env set AZURE_DOCKER raykorazuretest.azurecr.io
 1034* gaa
 1035* gcam "travis29"
 1036* gp
 1037  travis env set list
 1038  travis env list
 1039* gaa
 1040* gcam "travis30"
 1041* gp
 1042  az acr repository list --name raykorazuretest.azurecr.io --output table
 1043  az acr repository list --name raykorAzureTest --output table
 1044* gaa
 1045* gcam "travis31"
 1046* gp
 1047* gaa
 1048* gcam "travis32"
 1049* gp
 1050* gaa
 1051* gcam "travis33"
 1052* gp
 1053  kubectl get nodes;
 1054  kubectl get pods
 1055  az acr list --resource-group raykorAzureResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
 1056* gst
 1057* gaa
 1058* gcam "travis34"
 1059* gp
 1060* travis show
 1061* Documents/ll
 1062* Documents/
 1063* ll
 1064* code azure-voting-app-redis
 1065* kubectl create -f kubernetes.yml
 1066* kubectl get deployments
 1067* kubectl get services
 1068* kubectl get services --watch
 1069* kubectl get service
 1070* gst
 1071* gaa
 1072* gcam "travis35"
 1073* gp
 1074* gaa
 1075* gcam "travis36"
 1076* gp
 1077* gaa
 1078* gcam "travis37"
 1079* gp
 1080* kubectl get nodes
 1081* kubectl get deployments
 1082* kubectl get services
 1083* kubectl get pods
 1084* gaa
 1085* gcam "travis38"
 1086* gp
 1087* gaa
 1088* gcam "travis39"
 1089* gp
 1090* kubectl get pods
 1091* kubectl apply -f kubernetes.yml
 1092* kubectl get pods
 1093* kubectl get services
 1094* Desktop/sample-node
 1095* docker build -t raykorazuretest.azurecr.io/sample-node:2.0.3 .;
 1096* docker push raykorazuretest.azurecr.io/sample-node;
 1097* sudo docker push raykorazuretest.azurecr.io/sample-node;
 1098* sudo az acr login --name raykorAzureTest;
 1099* sudo docker push raykorazuretest.azurecr.io/sample-node;
 1100* gst
 1101* docker run raykorazuretest.azurecr.io/sample-node;
 1102* sudo docker run raykorazuretest.azurecr.io/sample-node;
 1103* docker images
 1104* sudo docker run raykorazuretest.azurecr.io/sample-node:2.0.3
 1105* Desktop/sample-node
 1106* kubectl apply -f kubernetes.yml;
 1107* docker build -t raykorazuretest.azurecr.io/sample-node:2.0.4 .;
 1108* sudo docker push raykorazuretest.azurecr.io/sample-node;
 1109* kubectl apply -f kubernetes.yml;
 1110* kubectl rollout status deployment sample-node
 1111* kubectl get rs
 1112* kubectk rollout history deployment sample-node
 1113* kubectl rollout history deployment sample-node
 1114* kubectl describe deploy sample-node
 1115* kubectl rollout status deployment sample-node
 1116* kubectl apply -f kubernetes.yml --record
 1117* kubectl rollout history deployment sample-node
 1118* kubectl rollout status deployment sample-node
 1119* kubectl get pods
 1120* kubectl get pods --watch
 1121* kubectl get deployments
 1122* kubectl get services
 1123* kubectl rollout resume deploy/sample-node
 1124* kubectl clusture-info
 1125* kubectl cluster-info
 1126* kubectl get cluster
 1127* echo $?
 1128* kubectl rollout status deploy/sample-node
 1129* kubectl apply -f kubernetes.yml --record
 1130* kubectl rollout status deploy/sample-node
 1131* kubectl rollout history deploy/sample-node
 1132* kubectl rollout status deploy/sample-node
 1133* kubectl apply -f kubernetes.yml --record
 1134* kubectl rollout status deploy/sample-node
 1135* kubectl apply -f kubernetes.yml --record
 1136* kubectl rollout status deploy/sample-node
 1137* kubectl rollout status deploy/azure-vote-front
 1138* kubectl create -f kubernetes.yml --record
 1139* kubectl delete deployment sample-node
 1140* kubectl delete service sample-node
 1141* kubectl get deployments
 1142* kubectl get services
 1143* kubectl delete deployment azure-vote-front
 1144* kubectl get deployments
 1145* kubectl create -f kubernetes.yml --record
 1146* kubectl get deployments
 1147* kubectl get services
 1148* kubectl get services --watch
 1149* docker build -t raykorazuretest.azurecr.io/sample-node:2.0.5 .;
 1150* sudo docker push raykorazuretest.azurecr.io/sample-node;
 1151* sudo az acr login --name raykorAzureTest
 1152* kubectl apply -f kubernetes.yml --record
 1153* kubectl rollout status deploy/sample-node
 1154* kubectl rollout history deploy/sample-node
 1155* gaa
 1156* gcam "travis38"
 1157* gp
 1158* ab -n 500 -c 20 http://40.71.186.235:3000/
 1159* for i in `seq 1 20`; do curl http://40.71.186.235:3000; done
 1160* for i in `seq 1 20`; do curl http://40.71.186.235:3000/user; done
 1161* kubectl get pods
 1162* gaa
 1163* gcam "travis39"
 1164* gp
 1165* gaa
 1166* gcam "travis40"
 1167* gp
 1168* for i in `seq 1 50`; do curl http://40.71.186.235:3000/user; done
 1169* for i in `seq 1 50`; do curl http://40.71.186.235:3000/; done
 1170* for i in `seq 1 500`; do curl http://40.71.186.235:3000/; done
 1171* kubectl rollout status deployment sample-node
 1172* kubectl get pods
 1173* for i in `seq 1 500`; do curl http://40.71.186.235:3000/; done
 1174* gaa
 1175* gcam "travis41"
 1176* gp
 1177* for i in `seq 1 500`; do curl http://40.71.186.235:3000/user; done
 1178* ^[[200~for i in `seq 1 500`; do curl http://40.71.186.235:3000/user; done
 1179* for i in `seq 1 500`; do curl http://40.71.186.235:3000/user; done
 1180* for i in `seq 1 5000`; do curl http://40.71.186.235:3000/user; done
 1181* for i in `seq 1 50`; do curl http://40.71.186.235:3000/user; done
 1182* gaa
 1183* gcam "travis42"
 1184* gp
 1185* for i in `seq 1 10000`; do curl http://40.71.186.235:3000/user; done
 1186* kubectl rollout status deployment sample-node
 1187* az aks browse --resource-group raykorAzureResourceGroup --name raykorAzureCluster
 1188* kubectl get rs
 1189* kubectl describe rs
 1190  history
